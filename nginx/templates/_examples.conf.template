# PHP-FPM PROXY EXAMPLE
server {
    listen 80;
    server_name example-nginx.local;
    root /data/www/example-nginx.local;
    # пример использования вложенной директории как корня
    #root /data/www/example-nginx.local/htdocs;

    access_log /etc/nginx/logs/example-nginx.local.access.log;
    error_log /etc/nginx/logs/example-nginx.local.error.log notice;

    client_max_body_size 20M;

    # запрещаем работать со скрытыми файлами и папками
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    location ~* .*/\..* {
        return 403;
    }

    # редирект ресурсов на production-хост
    #location ~* ^\/uploads {
    #    try_files $uri @missing;
    #}

    # всю статику, которая реально существует,
    # отдаем пользователю напрямую без прокси
    location ~ \.(jpe?g|png|svg|ico)$ {
        try_files $uri @php;
        expires 28d;
    }
    location ~ \.(js|css)$ {
        try_files $uri @php;
        #try_files $uri @ver;
        expires 1d;
    }
    location ~ \.(txt)$ {
        try_files $uri @php;
        expires 14d;
    }

    # все остальные запросы отдаем в прокси (apache/php-fpm)
    location / {
        # добавление слеша в конец URI
        # (для файлов с расширениями не отрабатывает)
        #rewrite ^([^.]*[^/])$ $1/ permanent;

        index /index.php;
        try_files $uri $uri/ /index.php?$args;
        # пример использования кастомного файла как корня
        #index /main.php;
        #try_files $uri $uri/ /main.php?$args;
    }
    location ~ \.php$ {
        try_files $uri @php;

        fastcgi_read_timeout 600;
        fastcgi_buffer_size 32k;
        fastcgi_buffers 4 32k;
        proxy_buffer_size 64k;
        proxy_buffers 4 64k;
        proxy_busy_buffers_size 64k;

        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME /data/www/example-nginx.local$fastcgi_script_name;
        # пример использования вложенной директории как корня
        #fastcgi_param SCRIPT_FILENAME /data/www/example-nginx.local/htdocs$fastcgi_script_name;
        fastcgi_pass php__74:9000;
    }

    # TODO: reactorcms (взять из конфигурации для rolf.local)
    # включать, если нужен
    #location ~ ^\/reactorcms {
    #    # добавление слеша в конец URI
    #    #rewrite ^([^.]*[^/])$ $1/ permanent;
    #
    #    try_files $uri @reactor_php;
    #}

    # aliases
    location @php {
        fastcgi_read_timeout 600;
        fastcgi_buffer_size 32k;
        fastcgi_buffers 4 32k;
        proxy_buffer_size 64k;
        proxy_buffers 4 64k;
        proxy_busy_buffers_size 64k;

        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME /data/www/example-nginx.local/index.php;
        fastcgi_param SCRIPT_NAME /index.php;
        # пример использования вложенной директории с кастомным файлом как корня
        #fastcgi_param SCRIPT_FILENAME /data/www/example-nginx.local/htdocs/main.php;
        #fastcgi_param SCRIPT_NAME /main.php;
        fastcgi_pass php__74:9000;
    }
    # TODO: придумать, как можно сократить
    location @reactor_php {
        fastcgi_read_timeout 600;
        fastcgi_buffer_size 32k;
        fastcgi_buffers 4 32k;
        proxy_buffer_size 64k;
        proxy_buffers 4 64k;
        proxy_busy_buffers_size 64k;

        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME /data/www/example-nginx.local/reactorcms/index.php;
        fastcgi_param SCRIPT_NAME /reactorcms/index.php;
        fastcgi_pass php__74:9000;
    }
    location @missing {
        rewrite ^/(.*) https://www.example.com/$1 permanent;
        break;
    }
    location @ver {
        rewrite ^(/[^.]*?)\..*?(\.(js|css))$ /$1$2;
    }
}

# APACHE PROXY EXAMPLE
server {
    listen 80;
    server_name example-apache.local;
    root /data/www/example-apache.local;
    # пример использования вложенной директории
    #root /data/www/optparts.local/htdocs;

    access_log /etc/nginx/logs/example-apache.local.access.log;
    error_log /etc/nginx/logs/example-apache.local.error.log notice;

    # всю статику, которая реально существует,
    # отдаем пользователю напрямую без прокси
    # (иногда изображения отдают в apache .htaccess)
    #location ~ \.(jpe?g|png|svg|ico)$ {
    #    try_files $uri @apache;
    #    # try_files $uri /index.php;
    #    expires 28d;
    #}
    location ~ \.(js|css)$ {
        try_files $uri @apache;
        # try_files $uri /index.php;
        expires 1d;
    }
    location ~ \.(txt)$ {
        try_files $uri @apache;
        # try_files $uri /index.php;
        expires 14d;
    }

    # все остальные запросы отдаем в прокси (apache/php-fpm)
    location / {
        try_files /proxy_pass_to_ @apache;
    }
    location ~ \.php$ {
        try_files $uri @apache;
        # TODO: to file!
        proxy_connect_timeout 600;
        proxy_send_timeout 600;
        proxy_read_timeout 600;
        send_timeout 600;
        proxy_set_header Host $host;
        proxy_set_header Referer $http_referer;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Original-Request $request_uri;
        proxy_pass http://apache:8080;
        #
    }
    location @apache {
        proxy_set_header Host $host;
        # TODO: to file!
        proxy_connect_timeout 600;
        proxy_send_timeout 600;
        proxy_read_timeout 600;
        send_timeout 600;
        proxy_set_header Referer $http_referer;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Original-Request $request_uri;
        proxy_pass http://apache:8080;
        #
    }
}